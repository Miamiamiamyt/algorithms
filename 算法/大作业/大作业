bwt是无损的压缩，改变编码的顺序
每次左移一位，n位能生成n个字符串
然后按照字典序排序记为M
取出M的最后一列记为L得到bwt——包含了原字符串的所有字符

bwt主要性质：
1.M中每一行的最后一个字符是在原字符串中出现在第一位之前的
2.顺序不变性

实现
1.维持c和occ两个数组 映射能够无损的还原原字符串
2.实际中，中间的字符是不用储存的，因为只需要第一列和最后一列
3.可以用无损压缩对字符串进行压缩——可以不做

基于bwt得出了查找子串的FM索引
1.看sp到ep之间的行数的最后一列有没有出现下一个字符，没出现就失配
2.如果有多个子串，可以查到有没有，有几个
3.用一个数据结构记录M的每一行是由原字符串移了几位形成的，可以部分存储，通过最后一位来找到一个存储了位置的行，以此为基础加上位移数
